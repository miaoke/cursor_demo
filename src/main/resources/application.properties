# 服务器配置
server.port=8082

# 数据库配置 - 使用单数据源
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/cursor_demo?useSSL=false&characterEncoding=utf8&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=123456

# 日志配置
logging.level.root=INFO
logging.level.org.example.mapper=DEBUG
logging.level.org.springframework=INFO
logging.level.org.mybatis=DEBUG

# HikariCP连接池配置
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.pool-name=CursorDemoHikariCP
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.validation-timeout=5000

# ShardingSphere 基础配置
spring.shardingsphere.mode.type=Memory
spring.shardingsphere.datasource.names=ds0

# 数据源配置
spring.shardingsphere.datasource.ds0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds0.url=jdbc:mysql://localhost:3306/cursor_demo?useSSL=false&characterEncoding=utf8&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=123456
spring.shardingsphere.datasource.ds0.max-pool-size=10

# 用户表分片配置 - 使用硬编码替代表达式避免解析问题
spring.shardingsphere.rules.sharding.tables.users.actual-data-nodes=ds0.users_0,ds0.users_1,ds0.users_2,ds0.users_3,ds0.users_4
spring.shardingsphere.rules.sharding.tables.users.key-generate-strategy.column=user_id
spring.shardingsphere.rules.sharding.tables.users.key-generate-strategy.key-generator-name=snowflake
spring.shardingsphere.rules.sharding.tables.users.table-strategy.standard.sharding-column=user_id
spring.shardingsphere.rules.sharding.tables.users.table-strategy.standard.sharding-algorithm-name=users_inline

# 订单表分片配置
spring.shardingsphere.rules.sharding.tables.orders.actual-data-nodes=ds0.orders_0,ds0.orders_1,ds0.orders_2,ds0.orders_3,ds0.orders_4
spring.shardingsphere.rules.sharding.tables.orders.key-generate-strategy.column=order_id
spring.shardingsphere.rules.sharding.tables.orders.key-generate-strategy.key-generator-name=snowflake
spring.shardingsphere.rules.sharding.tables.orders.table-strategy.standard.sharding-column=user_id
spring.shardingsphere.rules.sharding.tables.orders.table-strategy.standard.sharding-algorithm-name=orders_inline

# 测试表全局表配置
spring.shardingsphere.rules.sharding.tables.test_table.actual-data-nodes=ds0.test_table
spring.shardingsphere.rules.sharding.broadcast-tables=test_table

# 分片算法配置
spring.shardingsphere.rules.sharding.sharding-algorithms.users_inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.users_inline.props.algorithm-expression=users_$->{user_id % 5}
spring.shardingsphere.rules.sharding.sharding-algorithms.orders_inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.orders_inline.props.algorithm-expression=orders_$->{user_id % 5}

# 分布式ID生成器
spring.shardingsphere.rules.sharding.key-generators.snowflake.type=SNOWFLAKE
spring.shardingsphere.rules.sharding.key-generators.snowflake.props.worker-id=1
spring.shardingsphere.rules.sharding.key-generators.snowflake.props.max-vibration-offset=10

# 是否显示SQL
spring.shardingsphere.props.sql-show=true

# MyBatis配置
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.type-aliases-package=org.example.entity
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl

# Redis配置
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.database=0
spring.redis.timeout=10000
spring.redis.lettuce.pool.max-active=8
spring.redis.lettuce.pool.max-wait=-1
spring.redis.lettuce.pool.max-idle=8
spring.redis.lettuce.pool.min-idle=0

# Redisson配置
spring.redis.redisson.config=classpath:redisson.properties

# Elasticsearch配置
spring.elasticsearch.rest.uris=http://localhost:9200
spring.elasticsearch.rest.connection-timeout=5s
spring.elasticsearch.rest.read-timeout=30s
# ES索引配置
spring.data.elasticsearch.repositories.enabled=true
# ES日志配置
logging.level.org.springframework.data.elasticsearch.client.WIRE=TRACE 